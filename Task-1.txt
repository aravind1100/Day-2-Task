Question : Write a blog on the Difference between document and window objects

Difference Between Document and Window Objects in JavaScript

The Window Object:

The `window` object represents an open window in a browser. It is the global object in the browser environment, 
meaning all global JavaScript objects, functions, and variables automatically become members of the `window` object. 
This object serves as the top-level container for everything that happens in the browser.

Key Characteristics of the Window Object:

1. Global Scope: The `window` object is at the top of the hierarchy and provides the global context. 
Any global variables or functions can be accessed as properties of the `window` object.

2. Browser Window Representation: It represents the browser window or tab and includes properties and methods to control
 the appearance and behavior of the browser window.

3. Browser Control Methods: The `window` object has methods for opening, closing, and manipulating browser windows.

4. Timers and Intervals: Methods like `setTimeout` and `setInterval` are part of the `window` object,
 allowing for timed execution of functions.

The Document Object:

The `document` object represents the HTML document loaded into the browser window. 
It is the root node of the HTML document in the Document Object Model (DOM) tree, providing access
to all elements within the web page.

Key Characteristics of the Document Object:

1. DOM Representation: The `document` object is the entry point to the DOM, allowing you to access and manipulate HTML elements.

2. HTML Content Manipulation: It provides methods and properties to create, modify, and delete HTML elements.

3. Event Handling: You can attach event listeners to HTML elements using the `document` object, enabling interactive web pages.

4. Document Properties: The `document` object includes properties that provide information about the document, such as its URL.


Relationship Between Window and Document Objects:

The `document` object is a property of the `window` object, meaning you can access the `document` object using `window.document`. However, it’s common practice to simply use `document` since it is already in the global scope.

Examples of Interaction:

1. Accessing the Document Object:
   - The `document` object can be accessed directly or through the `window` object.

2. Displaying the Document’s URL:
   - The `document.URL` property displays the current document's URL.

3. Opening a New Document:
   - The `document.open()` method can be used to open and write new content into a document.

4. Displaying an Alert:
   - The `window.alert()` method displays an alert box with a message.

Conclusion:
Understanding the distinction between the `window` and `document` objects is essential for web development.
The `window` object provides the global context and controls the browser window, 
while the `document` object allows interaction with and manipulation of the HTML content.
Mastery of these objects and their methods enables the creation of dynamic and interactive web applications.

    
    